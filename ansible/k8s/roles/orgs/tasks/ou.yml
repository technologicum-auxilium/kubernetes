---
# Top-level
- name: Create root OU
  tags: [ou]
  community.windows.win_domain_ou:
    name: "{{ root_ou_name }}"
    path: "{{ domain_dn }}"
    state: present
    protect: true

- name: Create top-level OUs
  tags: [ou]
  community.windows.win_domain_ou:
    name: "{{ item }}"
    path: "{{ root_dn }}"
    state: present
    protect: true
  loop:
    - "00-Admins"
    - "10-Users"
    - "20-Groups"
    - "30-Workstations"
    - "31-Servers"
    - "40-Departments"
    - "50-ServiceAccounts"
    - "60-Policies"
    - "70-Resources"

# Sub-OUs basics
- name: Admins sub-OUs
  tags: [ou]
  community.windows.win_domain_ou:
    name: "{{ item }}"
    path: "OU=00-Admins,{{ root_dn }}"
    state: present
    protect: true
  loop: ["Users","Groups"]

- name: Users sub-OUs
  tags: [ou]
  community.windows.win_domain_ou:
    name: "{{ item }}"
    path: "OU=10-Users,{{ root_dn }}"
    state: present
    protect: true
  loop: ["Standard","Disabled"]

- name: Groups sub-OUs
  tags: [ou]
  community.windows.win_domain_ou:
    name: "{{ item }}"
    path: "OU=20-Groups,{{ root_dn }}"
    state: present
    protect: true
  loop: ["Global","DomainLocal","Universal"]

# Departments
- name: Departments
  tags: [ou,departments]
  community.windows.win_domain_ou:
    name: "{{ item }}"
    path: "OU=40-Departments,{{ root_dn }}"
    state: present
    protect: true
  loop: "{{ departments }}"

- name: Departments sub-OUs (Users/Computers)
  tags: [ou,departments]
  community.windows.win_domain_ou:
    name: "{{ sub }}"
    path: "OU={{ dept }},OU=40-Departments,{{ root_dn }}"
    state: present
    protect: true
  loop: "{{ departments | product(['Users','Computers']) | list }}"
  loop_control: { loop_var: dept_sub }
  vars:
    dept: "{{ dept_sub.0 }}"
    sub: "{{ dept_sub.1 }}"

# Workstations baseline
- name: Workstations Staging/Quarantine/Disabled (root level)
  tags: [ou,workstations]
  when: workstations_quarantine_level == 'workstations_root'
  community.windows.win_domain_ou:
    name: "{{ item }}"
    path: "OU=30-Workstations,{{ root_dn }}"
    state: present
    protect: true
  loop: ["Staging","Quarantine","Disabled"]

# Countries
- name: Countries under Workstations & Servers
  tags: [ou,geo]
  block:
    - community.windows.win_domain_ou:
        name: "{{ item }}"
        path: "OU=30-Workstations,{{ root_dn }}"
        state: present
        protect: true
      loop: "{{ geo_cities.keys() | list }}"
    - community.windows.win_domain_ou:
        name: "{{ item }}"
        path: "OU=31-Servers,{{ root_dn }}"
        state: present
        protect: true
      loop: "{{ geo_cities.keys() | list }}"

# States per country
- name: States under each country (Workstations & Servers)
  tags: [ou,geo]
  loop: "{{ geo_cities.keys() | list }}"
  loop_control: { loop_var: country }
  block:
    - community.windows.win_domain_ou:
        name: "{{ state }}"
        path: "OU={{ country }},OU=30-Workstations,{{ root_dn }}"
        state: present
        protect: true
      loop: "{{ geo_cities[country].keys() | list }}"
      loop_control: { loop_var: state }

    - community.windows.win_domain_ou:
        name: "{{ state }}"
        path: "OU={{ country }},OU=31-Servers,{{ root_dn }}"
        state: present
        protect: true
      loop: "{{ geo_cities[country].keys() | list }}"
      loop_control: { loop_var: state }

# Cities + leaves
- name: Cities & leaf OUs
  tags: [ou,geo]
  loop: "{{ geo_cities.keys() | list }}"
  loop_control: { loop_var: country }
  block:
    - name: Cities (Workstations)
      community.windows.win_domain_ou:
        name: "{{ city }}"
        path: "OU={{ state }},OU={{ country }},OU=30-Workstations,{{ root_dn }}"
        state: present
        protect: true
      loop: "{{ geo_cities[country][state] }}"
      loop_control: { loop_var: city }
      vars:
        states: "{{ geo_cities[country].keys() | list }}"
      with_items: "{{ states }}"
      loop_control:
        loop_var: state

    - name: Leaf 'Workstations'
      community.windows.win_domain_ou:
        name: "Workstations"
        path: "OU={{ city }},OU={{ state }},OU={{ country }},OU=30-Workstations,{{ root_dn }}"
        state: present
        protect: true
      loop: "{{ geo_cities[country][state] }}"
      loop_control: { loop_var: city }
      vars:
        states: "{{ geo_cities[country].keys() | list }}"
      with_items: "{{ states }}"
      loop_control:
        loop_var: state

    - name: Cities (Servers)
      community.windows.win_domain_ou:
        name: "{{ city }}"
        path: "OU={{ state }},OU={{ country }},OU=31-Servers,{{ root_dn }}"
        state: present
        protect: true
      loop: "{{ geo_cities[country][state] }}"
      loop_control: { loop_var: city }
      vars:
        states: "{{ geo_cities[country].keys() | list }}"
      with_items: "{{ states }}"
      loop_control:
        loop_var: state

    - name: Leaf 'Servers'
      community.windows.win_domain_ou:
        name: "Servers"
        path: "OU={{ city }},OU={{ state }},OU={{ country }},OU=31-Servers,{{ root_dn }}"
        state: present
        protect: true
      loop: "{{ geo_cities[country][state] }}"
      loop_control: { loop_var: city }
      vars:
        states: "{{ geo_cities[country].keys() | list }}"
      with_items: "{{ states }}"
      loop_control:
        loop_var: state

# Servers baseline/disabled placement
- name: Servers baseline/disabled at root
  tags: [ou,servers]
  when: servers_baseline_level == 'servers_root'
  community.windows.win_domain_ou:
    name: "{{ item }}"
    path: "OU=31-Servers,{{ root_dn }}"
    state: present
    protect: true
  loop: ["Baseline","Disabled"]

# Redirect containers
- name: Redirect CN=Computers -> Staging
  tags: [ou,redirect]
  vars:
    target_ou_computers: "OU=Staging,OU=30-Workstations,{{ root_dn }}"
  ansible.windows.win_command: >
    cmd.exe /c redircmp "{{ target_ou_computers }}"
  register: redircmp_out
  changed_when: "'successfully' in (redircmp_out.stdout | lower) or 'successfully' in (redircmp_out.stderr | lower)"

- name: Redirect CN=Users -> 10-Users\Standard (optional)
  when: redirect_users | bool
  tags: [ou,redirect]
  vars:
    target_ou_users: "OU=Standard,OU=10-Users,{{ root_dn }}"
  ansible.windows.win_command: >
    cmd.exe /c redirusr "{{ target_ou_users }}"
  register: redirusr_out
  changed_when: "'successfully' in (redirusr_out.stdout | lower) or 'successfully' in (redirusr_out.stderr | lower)"

# Baseline GPOs
- name: Create baseline GPOs
  when: create_baseline_gpos | bool
  tags: [ou,gpo]
  community.windows.win_gpo:
    name: "{{ item }}"
    state: present
  loop: ["Baseline - Workstations","Baseline - Servers"]

- name: Link GPOs
  when: create_baseline_gpos | bool
  tags: [ou,gpo]
  block:
    - community.windows.win_gpo_link:
        name: "Baseline - Workstations"
        target: "OU=30-Workstations,{{ root_dn }}"
        state: present
        enforced: no
    - community.windows.win_gpo_link:
        name: "Baseline - Servers"
        target: "OU=31-Servers,{{ root_dn }}"
        state: present
        enforced: no
